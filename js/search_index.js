var search_data = {"index":{"searchIndex":["shlisptools","ratio","scale","scales","shnth","<<()","[]()","add()","canonical()","d()","d=()","denos()","each()","empty?()","length()","mul()","mul()","multiplied()","n()","n=()","new()","new()","numes()","remove()","reset!()","to_r()","to_s()","to_s()","license","readme"],"longSearchIndex":["shlisptools","shlisptools::ratio","shlisptools::scale","shlisptools::scales","shlisptools::shnth","shlisptools::scale#<<()","shlisptools::scale#[]()","shlisptools::scale#add()","shlisptools::scale#canonical()","shlisptools::ratio#d()","shlisptools::ratio#d=()","shlisptools::scale#denos()","shlisptools::scale#each()","shlisptools::scale#empty?()","shlisptools::scale#length()","shlisptools::ratio#mul()","shlisptools::scale#mul()","shlisptools::scale#multiplied()","shlisptools::ratio#n()","shlisptools::ratio#n=()","shlisptools::ratio::new()","shlisptools::scale::new()","shlisptools::scale#numes()","shlisptools::scale#remove()","shlisptools::ratio#reset!()","shlisptools::ratio#to_r()","shlisptools::ratio#to_s()","shlisptools::scale#to_s()","",""],"info":[["ShlispTools","","ShlispTools.html","",""],["ShlispTools::Ratio","","ShlispTools/Ratio.html","","<p>A Shlisp-oriented representation of a pitch in just/rational intonation.\nNumerators are “numes” …\n"],["ShlispTools::Scale","","ShlispTools/Scale.html","","<p>A scale is a series of Ratio instances, always maintained in canonical\n(reduced) form and ascending order, …\n"],["ShlispTools::Scales","","ShlispTools/Scales.html","","<p>Predefined scales.\n"],["ShlispTools::Shnth","","ShlispTools/Shnth.html","","<p>Macros and constants for use with the shlerb tool.\n<p><strong>Light_</strong>*: simple light values, 1-8 across\n<p><strong>Situation_</strong> ...\n"],["<<","ShlispTools::Scale","ShlispTools/Scale.html#method-i-3C-3C","(degree)","<p>Add a new scal degree (Ratio) using string/array notation; i.e., myScale\n&lt;&lt; Ratio.new(5,4)/\n"],["[]","ShlispTools::Scale","ShlispTools/Scale.html#method-i-5B-5D","(idx)","<p>Return the scale degree at a specified postion (0-based).\n"],["add","ShlispTools::Scale","ShlispTools/Scale.html#method-i-add","(degree)","<p>Add a new scale degree (Ratio).\n"],["canonical","ShlispTools::Scale","ShlispTools/Scale.html#method-i-canonical","(sep=DEF_SEP)","<p>Print out the scale in canonical form (reduced rations).\n"],["d","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-d","()","<p>Get the deno(minator).\n"],["d=","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-d-3D","(deno)","<p>Set the deno(minator).\n"],["denos","ShlispTools::Scale","ShlispTools/Scale.html#method-i-denos","(sep=DEF_SEP)","<p>Print out all the deno(minators), multiplied.\n"],["each","ShlispTools::Scale","ShlispTools/Scale.html#method-i-each","(&block)","<p>iterator\n"],["empty?","ShlispTools::Scale","ShlispTools/Scale.html#method-i-empty-3F","()","<p>Return true if scale is empty, false otherwise.\n"],["length","ShlispTools::Scale","ShlispTools/Scale.html#method-i-length","()","<p>Return the number of degrees (notes) in the scale.\n"],["mul","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-mul","(factor)","<p>Multiply both nume and deno by same factor for Shnth amplitude scaling.\n"],["mul","ShlispTools::Scale","ShlispTools/Scale.html#method-i-mul","(factor)","<p>Apply a multiplicative factor to every ratio for Shnth amplitude scaling.\nFor example, myScale.scale …\n"],["multiplied","ShlispTools::Scale","ShlispTools/Scale.html#method-i-multiplied","(sep=DEF_SEP)","<p>Print out the scale (multiplied).\n"],["n","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-n","()","<p>Get the nume(rator).\n"],["n=","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-n-3D","(nume)","<p>Set the nume(rator).\n"],["new","ShlispTools::Ratio","ShlispTools/Ratio.html#method-c-new","(nume, deno, _mul=nil)",""],["new","ShlispTools::Scale","ShlispTools/Scale.html#method-c-new","(degrees=nil)","<p>Arg: either nothing, or an array of Ratios\n"],["numes","ShlispTools::Scale","ShlispTools/Scale.html#method-i-numes","(sep=DEF_SEP)","<p>Print out all the nume(rator)s, multiplied.\n"],["remove","ShlispTools::Scale","ShlispTools/Scale.html#method-i-remove","(idx)","<p>Remove the scale degree at the specified position (0-based).\n"],["reset!","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-reset-21","()","<p>Return to the canonical (reduced) value.\n"],["to_r","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-to_r","()","<p>Rational representation\n"],["to_s","ShlispTools::Ratio","ShlispTools/Ratio.html#method-i-to_s","()","<p>String representation\n"],["to_s","ShlispTools::Scale","ShlispTools/Scale.html#method-i-to_s","()","<p>Print the scale (multipied).\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2013 DaveSeidel\n<p>MIT License\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>Shlerb and ShlispTools\n<p>]\n<p>Tools for Shlisp/Shnth developers. If you don’t recognize both words\nstarting …\n"]]}}